  name: tag
on:
  push:
    tags:
    - '*'

jobs:
  release-xcframework:
    runs-on: macos-latest
    env:
      PROJECT_NAME: xcutility
      FRAMEWORK_NAME: XCUtilityFramework
    steps:
    - uses: actions/checkout@v2
    - name: create xcode project
      run: |
        swift package generate-xcodeproj

    - name: archive platform frameworks
      run: |
        set -o pipefail
        platforms=("iOS" "iOS Simulator" "watchOS" "watchOS Simulator" "tvOS" "tvOS Simulator" "macOS")
        for platform in "${platforms[@]}"; do
          echo $platform
          xcodebuild archive -project "$PROJECT_NAME.xcodeproj" -scheme "$FRAMEWORK_NAME" \
            -destination "generic/platform=$platform" \
            -archivePath "archives/$FRAMEWORK_NAME-$platform" \
            SKIP_INSTALL=NO BUILD_LIBRARY_FOR_DISTRIBUTION=YES | xcpretty
        done
    - name: create xcframework
      run: |
        xcodebuild -create-xcframework \
           -framework "archives/$FRAMEWORK_NAME-iOS.xcarchive/Products/Library/Frameworks/$FRAMEWORK_NAME.framework" \
           -framework "archives/$FRAMEWORK_NAME-iOS Simulator.xcarchive/Products/Library/Frameworks/$FRAMEWORK_NAME.framework" \
           -framework "archives/$FRAMEWORK_NAME-watchOS.xcarchive/Products/Library/Frameworks/$FRAMEWORK_NAME.framework" \
           -framework "archives/$FRAMEWORK_NAME-watchOS Simulator.xcarchive/Products/Library/Frameworks/$FRAMEWORK_NAME.framework" \
           -framework "archives/$FRAMEWORK_NAME-tvOS.xcarchive/Products/Library/Frameworks/$FRAMEWORK_NAME.framework" \
           -framework "archives/$FRAMEWORK_NAME-tvOS Simulator.xcarchive/Products/Library/Frameworks/$FRAMEWORK_NAME.framework" \
           -framework "archives/$FRAMEWORK_NAMEs-macOS.xcarchive/Products/Library/Frameworks/$FRAMEWORK_NAME.framework" \
           -output "$FRAMEWORK_NAME.xcframework"
    - name: zip xcframework
      run: |
        zip -r "$FRAMEWORK_NAME.xcframework.zip" "$FRAMEWORK_NAME.xcframework"

    - name: Create GitHub Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        body: |
          Release ${{ github.ref }}
        draft: true
        prerelease: true

    - name: Add xcframework to Release
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./${{ env.FRAMEWORK_NAME }}.xcframework.zip
        asset_name: ${{ env.FRAMEWORK_NAME }}.xcframework.zip
        asset_content_type: application/zip
